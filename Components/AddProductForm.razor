@using EcommerceFronted.models;
@inject ProductServices ProductService;
@inject IJSRuntime _JSRuntime;
@inject NavigationManager NavigationManager;

<EditForm Model="@productModel" OnValidSubmit="HandleValidSubmit" class="card p-4 mt-4" style="width: 40vw; margin:auto;">
    <h3>Add Product</h3>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="productName">Product Name:</label>
        <InputText id="productName" class="form-control" @bind-Value="productModel.Name" />
    </div>

    <div class="form-group">
        <label for="productDescription">Product Description:</label>
        <InputText id="productDescription" class="form-control" @bind-Value="productModel.Description" />
    </div>

    <div class="form-group">
        <label for="productPrice">Product Price:</label>
        <InputNumber id="productPrice" class="form-control" @bind-Value="productModel.price" />
    </div>

    <button type="submit" class="btn btn-success mt-2">Add Product</button>
</EditForm>

@code {
    private Products productModel = new Products();

    private async Task HandleValidSubmit()
    {
        // Assume ProductService has a method to add a product
      await ProductService.AddProduct(productModel);

        // Reset the form after adding the product
        productModel = new Products();

        // Optionally, navigate to the product list or another page
        @* NavigationManager.NavigateTo("/products"); *@
    }
}
