@page "/login"
@using LogInDTONameSpace
@using EcommerceFronted.models;
@inject AuthApiService AuthApiService;
@* @inject JSRuntime JSRuntime; *@
@inject IJSRuntime _JSRuntime;
@inject NavigationManager NavigationManager;
<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit" class="card p-4 mt-4" style="width: 40vw; margin:auto;">
    <h3>Login</h3>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.password" />
    </div>
  

    <button type="submit" class="btn btn-success mt-2">Login</button>
</EditForm>

@code {
    private LoginDTO loginModel = new LoginDTO();

    private async Task  HandleValidSubmit()
    {
        LoginResponse loginResponse= await AuthApiService.UserLogin(loginModel); 
        if(loginResponse!=null)
       {
        String token =loginResponse.usertoker;
        StoreTokenInLocalStorage(token);
        NavigationManager.NavigateTo("/products");

       }else
       {

       }
        
        
    }
private async Task StoreTokenInLocalStorage(String token)
    {
        await _JSRuntime.InvokeVoidAsync("localStorageFunctions.setItem", "token", token);
    }

   

}
